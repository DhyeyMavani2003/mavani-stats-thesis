{
  "hash": "f80c3ff1c7c44d68c64485e98bab7494",
  "result": {
    "engine": "knitr",
    "markdown": "# Unraveling Notion of Dependence through Copulas {#sec-simple}\n\n\n\n\n\n<!-- Make it accessible by starting with a motivating example, then proceed towards more rigorousness gradually until challenges for discrete case are covered. -->\n\nIn this chapter, we will formalize some aspects of phenomena such as dependence and association. In order to aid us in our understanding, we will use two bivariate random vectors. Along the way, we will visualize and analyze various aspects of their dependence and association through Python code.\n\nConsider $(X_1, X_2)$ and $(Y_1, Y_2)$ be bivariate random vectors, each consisting of 10000 independent data-points, which are distributed with the joint distributions $F$ and $G$ respectively.  \n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n(array([0.00063618, 0.        , 0.        , 0.00127236, 0.00190855,\n       0.00063618, 0.00254473, 0.00572564, 0.00318091, 0.0108151 ,\n       0.02099402, 0.02226638, 0.02926439, 0.02990057, 0.05598405,\n       0.07888661, 0.09224644, 0.11133191, 0.17240542, 0.17813106,\n       0.23665984, 0.27037751, 0.28819061, 0.33145101, 0.35117267,\n       0.37916469, 0.40015871, 0.40015871, 0.38743506, 0.36644104,\n       0.3537174 , 0.34099375, 0.26528805, 0.25065585, 0.2201191 ,\n       0.16413505, 0.13805157, 0.10433391, 0.09288263, 0.05725641,\n       0.04071567, 0.03562621, 0.02799202, 0.01399601, 0.01145128,\n       0.00763419, 0.00063618, 0.00381709, 0.00190855, 0.00127236]), array([-4.28375   , -4.12656237, -3.96937473, -3.8121871 , -3.65499947,\n       -3.49781184, -3.3406242 , -3.18343657, -3.02624894, -2.86906131,\n       -2.71187367, -2.55468604, -2.39749841, -2.24031078, -2.08312314,\n       -1.92593551, -1.76874788, -1.61156025, -1.45437261, -1.29718498,\n       -1.13999735, -0.98280972, -0.82562208, -0.66843445, -0.51124682,\n       -0.35405918, -0.19687155, -0.03968392,  0.11750371,  0.27469135,\n        0.43187898,  0.58906661,  0.74625424,  0.90344188,  1.06062951,\n        1.21781714,  1.37500477,  1.53219241,  1.68938004,  1.84656767,\n        2.0037553 ,  2.16094294,  2.31813057,  2.4753182 ,  2.63250583,\n        2.78969347,  2.9468811 ,  3.10406873,  3.26125637,  3.418444  ,\n        3.57563163]), [<matplotlib.patches.Polygon object at 0x7f7e16776810>])\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n(array([0.00062644, 0.        , 0.        , 0.        , 0.00125289,\n       0.00563799, 0.00501155, 0.00751732, 0.00814377, 0.02192553,\n       0.02881641, 0.0344544 , 0.04635683, 0.07141457, 0.10148386,\n       0.12842094, 0.16036956, 0.19419752, 0.25183033, 0.28002029,\n       0.29630782, 0.35331419, 0.38526281, 0.38463637, 0.410947  ,\n       0.3620844 , 0.38087771, 0.36897528, 0.35456708, 0.32763   ,\n       0.25872121, 0.23742212, 0.17853643, 0.15285224, 0.12403583,\n       0.09647231, 0.07454679, 0.05700637, 0.0388395 , 0.02818996,\n       0.01941975, 0.00626444, 0.00877021, 0.00501155, 0.00250577,\n       0.00187933, 0.        , 0.00062644, 0.        , 0.00125289]), array([-3.97408822, -3.81445693, -3.65482564, -3.49519435, -3.33556306,\n       -3.17593177, -3.01630048, -2.85666919, -2.69703789, -2.5374066 ,\n       -2.37777531, -2.21814402, -2.05851273, -1.89888144, -1.73925015,\n       -1.57961886, -1.41998757, -1.26035628, -1.10072499, -0.9410937 ,\n       -0.78146241, -0.62183112, -0.46219983, -0.30256854, -0.14293725,\n        0.01669404,  0.17632533,  0.33595662,  0.49558792,  0.65521921,\n        0.8148505 ,  0.97448179,  1.13411308,  1.29374437,  1.45337566,\n        1.61300695,  1.77263824,  1.93226953,  2.09190082,  2.25153211,\n        2.4111634 ,  2.57079469,  2.73042598,  2.89005727,  3.04968856,\n        3.20931985,  3.36895114,  3.52858243,  3.68821373,  3.84784502,\n        4.00747631]), [<matplotlib.patches.Polygon object at 0x7f7e16306450>])\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n(array([0.04773637, 0.04773637, 0.18412599, 0.38871042, 0.4705442 ,\n       0.67512863, 0.89335203, 1.20022868, 1.52074429, 1.9162742 ,\n       2.15495604, 2.29134566, 2.82326519, 3.05512754, 2.73461193,\n       2.98011325, 3.28017042, 3.34836523, 3.09604443, 3.04148858,\n       2.98011325, 2.76870934, 3.08240547, 2.99375221, 2.7823483 ,\n       2.30498462, 2.08676122, 1.86853783, 1.71850924, 1.50028585,\n       1.38435467, 1.11157542, 1.12521439, 0.85925462, 0.80469877,\n       0.51146108, 0.5796559 , 0.38189094, 0.24550132, 0.24550132,\n       0.17730651, 0.18412599, 0.12275066, 0.06137533, 0.05455585,\n       0.04091689, 0.04773637, 0.        , 0.00681948, 0.01363896]), array([0.04264284, 0.05730671, 0.07197058, 0.08663446, 0.10129833,\n       0.1159622 , 0.13062607, 0.14528994, 0.15995382, 0.17461769,\n       0.18928156, 0.20394543, 0.21860931, 0.23327318, 0.24793705,\n       0.26260092, 0.27726479, 0.29192867, 0.30659254, 0.32125641,\n       0.33592028, 0.35058416, 0.36524803, 0.3799119 , 0.39457577,\n       0.40923964, 0.42390352, 0.43856739, 0.45323126, 0.46789513,\n       0.48255901, 0.49722288, 0.51188675, 0.52655062, 0.54121449,\n       0.55587837, 0.57054224, 0.58520611, 0.59986998, 0.61453386,\n       0.62919773, 0.6438616 , 0.65852547, 0.67318934, 0.68785322,\n       0.70251709, 0.71718096, 0.73184483, 0.74650871, 0.76117258,\n       0.77583645]), [<matplotlib.patches.Polygon object at 0x7f7e1630f050>])\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n(array([9.19972775e-01, 7.23318931e-01, 6.02041007e-01, 4.79796726e-01,\n       4.03937626e-01, 3.21314021e-01, 2.62849364e-01, 1.97137023e-01,\n       1.72978074e-01, 1.46403231e-01, 1.05333017e-01, 9.47030798e-02,\n       8.74553951e-02, 7.24768468e-02, 4.68683609e-02, 3.91374973e-02,\n       2.89907387e-02, 2.75412018e-02, 1.93271591e-02, 1.44953694e-02,\n       1.06299375e-02, 8.21404264e-03, 1.15962955e-02, 8.69722162e-03,\n       6.28132672e-03, 4.83178979e-03, 4.83178979e-03, 9.66357957e-04,\n       1.44953694e-03, 1.93271591e-03, 4.83178979e-04, 9.66357957e-04,\n       4.83178979e-04, 4.83178979e-04, 4.83178979e-04, 4.83178979e-04,\n       4.83178979e-04, 4.83178979e-04, 0.00000000e+00, 9.66357957e-04,\n       0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,\n       0.00000000e+00, 0.00000000e+00, 4.83178979e-04, 0.00000000e+00,\n       0.00000000e+00, 4.83178979e-04]), array([1.34262258e-05, 2.06976072e-01, 4.13938719e-01, 6.20901365e-01,\n       8.27864011e-01, 1.03482666e+00, 1.24178930e+00, 1.44875195e+00,\n       1.65571460e+00, 1.86267724e+00, 2.06963989e+00, 2.27660253e+00,\n       2.48356518e+00, 2.69052783e+00, 2.89749047e+00, 3.10445312e+00,\n       3.31141576e+00, 3.51837841e+00, 3.72534106e+00, 3.93230370e+00,\n       4.13926635e+00, 4.34622900e+00, 4.55319164e+00, 4.76015429e+00,\n       4.96711693e+00, 5.17407958e+00, 5.38104223e+00, 5.58800487e+00,\n       5.79496752e+00, 6.00193016e+00, 6.20889281e+00, 6.41585546e+00,\n       6.62281810e+00, 6.82978075e+00, 7.03674340e+00, 7.24370604e+00,\n       7.45066869e+00, 7.65763133e+00, 7.86459398e+00, 8.07155663e+00,\n       8.27851927e+00, 8.48548192e+00, 8.69244457e+00, 8.89940721e+00,\n       9.10636986e+00, 9.31333250e+00, 9.52029515e+00, 9.72725780e+00,\n       9.93422044e+00, 1.01411831e+01, 1.03481457e+01]), [<matplotlib.patches.Polygon object at 0x7f7e16315190>])\n```\n\n\n:::\n\n::: {.cell-output-display}\n![Scatter plots of 10000 independent observations of $(X_1, X_2)$ and $(Y_1, Y_2)$ with bell-shaped curves depicting respective marginal distributions on the sides.](02-ch2-dep-copula_files/figure-pdf/fig-motivating-example-1.pdf){#fig-motivating-example}\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Distribution of heights of WNBA players in the 2024 season.](02-ch2-dep-copula_files/figure-pdf/fig-wnba-ht-3.pdf){#fig-wnba-ht}\n:::\n:::\n\n\n\n## Tables\n\nYour tables should be publication quality. Consider using [**gt**](https://gt.rstudio.com/articles/gt.html) [@gt] or  [**kableExtra**](https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_pdf.pdf) [@kableExtra] to customize your tables. The [**gtsummary**](https://www.danieldsjoberg.com/gtsummary/) package [@gtsummary] may also come in handy.\n\n@tbl-ht-by-pos shows the average heights of WNBA players by position. \n\n\n::: {#tbl-ht-by-pos .cell tbl-cap='Average WNBA player height by position.'}\n::: {.cell-output-display}\n\\begin{table}\n\\fontsize{12.0pt}{14.4pt}\\selectfont\n\\begin{tabular*}{\\linewidth}{@{\\extracolsep{\\fill}}cr}\n\\toprule\nPosition & Average height (in) \\\\ \n\\midrule\\addlinespace[2.5pt]\nGuard & 70.2 \\\\ \nForward & 74.9 \\\\ \nCenter & 77.3 \\\\ \n\\bottomrule\n\\end{tabular*}\n\\end{table}\n\n:::\n:::\n\n\n\n<!-- \nThe following section should be included at the end of each chapter that contains code.\n\nNote that this will include code from code chunks even if `eval` is set to `false`.\n-->\n\n## @sec-simple Code\n\nThe following code was used to create @sec-simple.\n\n### Code within chapter\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load knitr package\nlibrary(knitr)\n\n# Python Engine Setup\nknit_engines$set(python3 = knit_engines$get(\"python\"))\n\n# Load packages\nlibrary(tidyverse)\nlibrary(gt)\n\n# Set default ggplot theme for document\ntheme_set(theme_classic())\n# If using kableExtra tables, print blank cells instead of `NA`\noptions(knitr.kable.NA = \"\")\n\n# Load data\nload(\"data/temp_wnba.RData\")\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.stats import beta, expon, norm\n\n# Set random seed for reproducibility\nnp.random.seed(8990)\n\n# Number of samples\nn = 10000\n\n# Generate data for (X1, X2)\nmean = [0, 0]\ncov = [[1, 0.65], [0.65, 1]]  # Correlation matrix\nX = np.random.multivariate_normal(mean, cov, size=n)\n\n# Transform data for (Y1, Y2)\nY1 = beta.rvs(5, 10, size=n)\nY2 = expon.rvs(scale=1, size=n)\n\n# Plot (X1, X2) and (Y1, Y2)\nfig, axes = plt.subplots(1, 2, figsize=(12, 6))\n\n# Scatter plot for (X1, X2)\naxes[0].scatter(X[:, 0], X[:, 1], alpha=0.5, s=5)\naxes[0].set_title(\"Scatter plot of (X1, X2)\")\naxes[0].set_xlabel(\"X1\")\naxes[0].set_ylabel(\"X2\")\n\n# Add marginal histograms\naxes[0].hist(X[:, 0], bins=50, density=True, alpha=0.6, color='blue', orientation='vertical', histtype='step')\naxes[0].hist(X[:, 1], bins=50, density=True, alpha=0.6, color='red', histtype='step', orientation='horizontal')\n\n# Scatter plot for (Y1, Y2)\naxes[1].scatter(Y1, Y2, alpha=0.5, s=5)\naxes[1].set_title(\"Scatter plot of (Y1, Y2)\")\naxes[1].set_xlabel(\"Y1\")\naxes[1].set_ylabel(\"Y2\")\n\n# Add marginal histograms\naxes[1].hist(Y1, bins=50, density=True, alpha=0.6, color='blue', orientation='vertical', histtype='step')\naxes[1].hist(Y2, bins=50, density=True, alpha=0.6, color='red', histtype='step', orientation='horizontal')\n\nplt.tight_layout()\nplt.show()\n# Use Freedman-Diaconus rule to set binwidth\nht_bw <- 2 * IQR(wnba$height) / nrow(wnba)^(1/3)\n\n# Create histogram of height faceted by player position\nggplot(wnba, aes(height)) +\n  geom_histogram(binwidth = ht_bw) +\n  labs(x = \"Height (in)\",\n       y = \"Count\",\n       caption = \"Source: https://www.espn.com/wnba/stats/player\") +\n  theme_bw()\nwnba |> \n  group_by(position) |> \n  summarize(mean_ht = mean(height)) |> \n  gt() |> \n  cols_label(\n    position = \"Position\",\n    mean_ht = \"Average height (in)\"\n  ) |> \n  fmt_number(decimals = 1)\n# =======================================================================\n# Sample R script for thesis template\n#\n# Cleans temp_raw_wnba.csv dataset, which contains data pulled from\n# https://www.espn.com/wnba/stats/player on 2024/06/19\n#\n# Last updated: 2024/06/19\n# =======================================================================\nlibrary(tidyverse)\n\nwnba <- read_csv(\"data/temp_raw_wnba.csv\") |> \n  janitor::clean_names() |> \n  # Pull jersey numbers off of names and \n  # turn height text into msmt (6'4\" = 6.3333)\n  mutate(jersey = str_extract(name, \"[0-9]+$\"),\n         name = str_remove(name, \"[0-9]+$\"),\n         ht_ft = parse_number(str_extract(ht, \"^[0-9]\")),\n         ht_in = parse_number(str_extract(ht, '[0-9]+\\\\\"$')),\n         height = ht_ft * 12 + ht_in,\n         weight = parse_number(wt),\n         position = factor(pos,\n                           levels = c(\"G\", \"F\", \"C\"),\n                           labels = c(\"Guard\", \"Forward\", \"Center\"))) |> \n  select(-c(ht, wt, ht_ft, ht_in, pos))\n  \nsave(wnba, file = \"data/temp_wnba.RData\")\n```\n:::\n\n\n### Code sourced from external scripts\n\n::: {.cell}\n\n```{.r .cell-code}\n# =======================================================================\n# Sample R script for thesis template\n#\n# Cleans temp_raw_wnba.csv dataset, which contains data pulled from\n# https://www.espn.com/wnba/stats/player on 2024/06/19\n#\n# Last updated: 2024/06/19\n# =======================================================================\nlibrary(tidyverse)\n\nwnba <- read_csv(\"data/temp_raw_wnba.csv\") |> \n  janitor::clean_names() |> \n  # Pull jersey numbers off of names and \n  # turn height text into msmt (6'4\" = 6.3333)\n  mutate(jersey = str_extract(name, \"[0-9]+$\"),\n         name = str_remove(name, \"[0-9]+$\"),\n         ht_ft = parse_number(str_extract(ht, \"^[0-9]\")),\n         ht_in = parse_number(str_extract(ht, '[0-9]+\\\\\"$')),\n         height = ht_ft * 12 + ht_in,\n         weight = parse_number(wt),\n         position = factor(pos,\n                           levels = c(\"G\", \"F\", \"C\"),\n                           labels = c(\"Guard\", \"Forward\", \"Center\"))) |> \n  select(-c(ht, wt, ht_ft, ht_in, pos))\n  \nsave(wnba, file = \"data/temp_wnba.RData\")\n```\n:::\n",
    "supporting": [
      "02-ch2-dep-copula_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{\"knit_meta_id\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"tbl-ht-by-pos\",\"tbl-ht-by-pos\",\"tbl-ht-by-pos\",\"tbl-ht-by-pos\",\"tbl-ht-by-pos\",\"tbl-ht-by-pos\",\"tbl-ht-by-pos\"]}},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"booktabs\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"caption\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"longtable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"colortbl\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"array\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"anyfontsize\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"multirow\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]}]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}